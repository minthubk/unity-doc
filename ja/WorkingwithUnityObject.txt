!UnityObject2の働き / Working with UnityObject2

$$UnityObject2$$ はシンプルにUnityのコンテンツをHTMLに埋め込んだりインストルのプロセスをカスタマイズすることが出来るJavascriptです。 あなたのゲームやウェブサイトに適するインストールUIを作成することは、エンドユーザーにとって魅力的であり、楽しい経験をもたらすことでしょう。このUnity $$Web Player$$ プラグインはWeb Playerインストールの開始と埋め込まれたUnityコンテンツの検出を行う関数を持っています。 HTMLファイルと一緒に ``UnityObject2.js`` ファイルをWebサーバー上にアップロードすることも可能ですが、Unityが提供している``[=http://webplayer.unity3d.com/download_webplayer-3.x/3.0/uo/UnityObject2.js=]`` または https対応の場合は ``[=https://ssl-webplayer.unity3d.com/download_webplayer-3.x/3.0/uo/UnityObject2.js=]`` から読み込ませるのが最善の方法です。そうすることで常に最新のUnityObject2を使用することができます。 Unityのサーバー上にある ``UnityObject2.js`` はトラフィックを節約するためにminifyされています。 ソースコードを見たい場合はWindowsであれば ``Data\Resources`` フォルダの中に、Mac OS Xであれば ``Contents/Resources`` フォルダの中にあります。  UnityObject2はデフォルトでインストールタイプの識別やコンバーション率などのデータをGoogleAnalyticsへ送信しています。UnityObject2 はjQueryに依存しています。


[[#constructor]]
!!コンストラクタ
Webページ上に存在する各Unityコンテンツに対してunityObject2のインスタンスを生成する必要があります。

''パラメータ:''

* ``configuration`` - このインスタンスは設定が含まれているオブジェクトです。 以下は利用できるメンバー:
** ``width`` - デフォルトは100%,Unityコンテンツの幅。 ピクセル単位で指定することができます。 (i.e. 600, "450")。 またパーセント単位でも可能です。 (i.e. "50%", "100%")。 パーセント指定は親要素の影響を受けることに注意して下さい。
** ``height`` - デフォルトは100%, Unityコンテンツの高さ。 ピクセル単位で指定することができます。 (i.e. 600, "450")またパーセント単位でも可能です。 (i.e. "50%", "100%")。 パーセント指定は親要素の影響を受けることに注意して下さい。
** ``fullInstall`` - デフォルトはfalse。 利用できない場合は完全なWeb Playerをインストールします. 通常は起動に必要な最小のものだけインストールされ、残りは後で自動的にダウンロードされます。
** ``enableJava`` - デフォルトはtrue。Javaベースのインストールを有効にします。一部のプラットフォームではこの機能はサポートしていません。
** ``enableClickOnce`` - デフォルトはtrue。 ClickOnceベースのインストールを有効にします。Internet Explorerのみ動作します。
** ``enableUnityAnalytics`` - デフォルトはtrue。 Web Playerがインストールされたことについて通知を行います。 これは既にUnity Web Playerがインストールされている場合は動作しません。
** ``enableGoogleAnalytics`` - デフォルトはtrue。 Web PlayerがインストールされたことについてGoogle Analyticsを使用して通知を行います。 これは既にUnity Web Playerがインストールされている場合は動作しません。
** ``params`` - デフォルトは{}。Playerを埋め込むときに使用される追加のパラメータ。 Unityの経験からカスタマイズしたら便利だと思えるものが実装されています:
*** ``backgroundcolor`` -  デフォルトは"FFFFFF"。Web Playerコンテンツのロード中の背景を変更します。デフォルトは白です。 $$Pro Only$$
*** ``bordercolor`` - デフォルトは"FFFFFF"。Web Playerコンテンツのロード中の枠を1ピクセル分変更します。デフォルトは白です。$$Pro Only$$
*** ``textcolor`` - デフォルトは"000000", エラーメッセージの色を経高します (例えばデータファイルの読み込みが失敗した時). $$Pro Only$$
*** ``logoimage`` - デフォルトはUnityのロゴ。 カスタマイズされたロゴイメージのパスを設定します。 このロゴ画像はWeb Playerコンテンツのロード中でコンテンツの中央に表示されます。 $$Pro Only$$
*** ``progressbarimage`` - Web Playerコンテンツロード中のプログレスバーを画像を使用して描画します。カスタマイズされた画像のパスを設定します。このプログレスバーの画像はロードが完了した時の幅をベースとし切り取られて使用されます。従って初めは幅を0ピクセルから開始し、ロードが完了した時実際の画像の幅になります。 プログレスバーはロゴ画像の下に描画されます。 $$Pro Only$$
*** ``progressframeimage`` - Web Playerコンテンツのロード中のプログレスバーのフレームをカスタマイズされた画像を使用して描画します。カスタマイズされた画像のパスを設定します。 $$Pro Only$$
*** ``disableContextMenu`` - 右クリックやControlクリックした時のUnity Web Playerのコンテキストメニューを表示するかどうかを制御することができます。 trueにすることでコンテキストメニューは表示されず、ゲーム内で右クリックを使用することが可能になります。コンテキストメニューを有効にするにはこのパラメータを含めないようにして下さい
*** ``disableExternalCall`` - Unity Web PlayerとブラウザベースのJavascriptとの通信を許可するかどうかを設定します。 trueにするとブラウザとの通信を防ぐのでJavascriptの実行やコンテントを呼び出すことはできません。デフォルトはfalseです。
*** ``disableFullscreen`` - Unity Web Playerのフルスクリーンを許可するかを設定します。trueに設定するとフルスクリーンにすることは出来ず、コンテキストメニューからも"Go Fullscreen"からフルスクリーンにすることはできません。デフォルトはfalseです。
** ``attributes`` - デフォルトは{}。 ObjectにAttributeを含ませるリストです。 これは ``&lt;object&gt;`` や ``&lt;embed&gt;	`` タグの為にブラウザごとにつけることができます。
** ``debugLevel`` - デフォルトは0。ブラウザコンソールに進捗状況を確認することが出来るようにログを出力するかどうかを有効/無効にします。これは開発の際に便利です。有効にするには0より大きな値を設定します。

''注意'':
全ての色は16進数の色で指定しなければいけません。 (eg. FFFFFF, 020F16, etc.)。 画像のパスは相対パスまたは絶対パスを指定することができます。また画像のファイルはRGB(透過なし)またはRGBA(透過)の8bit/channelのPNGファイルでなければいけません。最後に、progressframeimageとprogressbarimageの高さが同じでなければいけません。

!!関数

!!!進捗の観察
プラグインのインストール、かつ/または初期化の際に通知を受け取るコールバックを登録することができます。

''パラメータ:''

* ``callback`` - プラグインのインストール/初期化に関する情報を得るためのコールバック関数です。このコールバックは``progress``を受け取るオブジェクトです。
** ``progress`` - インストール/初期化の現在の進捗状況に関する情報が含まれています。
*** ``pluginStatus`` - プラグインの状態を識別する文字列が含まれています。その文字列は以下の通りです:
**** ``unsupported``` - 現在のBrowser/OSはサポートしていません。
**** ``missing`` - サポートしていますが、まだプラグインがインストールされていません。
**** ``installed`` - プラグインがインストール中、または既にインストールされています。
**** ``first`` - プラグインがインストールされた後、ゲームの最初のフレームが再生されました。 (既にプラグインがインストールされていた場合は呼び出されません)
*** ``targetEl`` - WebPlayerのコンテナとして機能するDOM要素 (これはUnityObject2.initPluginに渡すのと同じ要素です)
*** ``bestMethod`` -現在のプラットフォームに最適なインストールパスが含まれています。プラグインがmissingの場合は次のいずれかの文字列を指定できます。
**** ``JavaInstall`` - これはプラグインをインストールするためにJavaAppletの"One Click"を実行します。
**** ``ClickOnceIE`` - これはInternet Explorer'sのClickOnceインストールを実行します。
**** ``Manual`` - インストールをユーザーが手動で行うためにユーザーがダウンロードするのを要求します。
*** ``unityObj``- このコールバックを呼び出す以前に生成されたUnityObject2の参照
*** ``ua`` -  pluginStatusとbestMethodを決定するために使用されるユーザーエージェント情報が含まれています。

[[#initPlugin]]
!!!initPlugin
実際にゲームを起動しようとします。そして、事前に登録したコールバックを呼び出します。注意して下さい。 

''パラメータ:''
* ``containerElement`` - Web Playerのコンテナとして機能するDOM要素です。
* ``gameURL`` - Web Playerのデータファイル(.unity3d)のURL。相対パスと絶対パスを利用することができます。

''注意'':
この関数はcontainerElementがDOMに存在した後に呼び出す必要があります。安全のために、DOMが完全にロードするまで待つことができます。
!!!installPlugin
指定された方法 ``method`` でプラグインをインストールします。もし方法が指定されなかった時、this.getBestInstallMethod()を呼び出して使用します。

''パラメータ:''
* ``method`` - デフォルトは ``getBestInstallMethod``(). インストール方法を文字列で指定します。 文字列は以下の値をサポートしています。: JavaInstall, ClickOnceIE, Manual.

''注意'':
全てのメソッドは全てのプラットフォーム/ブラウザで利用可能なわけではありません。 Manualはexe/dmgファイルがダウンロードされユーザーが手動でインストールする必要があります。


!!!getUnity
これはPlayerの参照を返します。ですのでSendMessageを呼び出すことができます。

''注意'':
WebPlayerがまだ初期化されていない場合はnullを返します。


''例:''
この例は非常に簡単なUnityObject2の使い方です。もし既にユーザーがプラグインをインストールしていたらWebPlayerが正常にロードされ、それ以外の場合は隠されていた @@div.missing@@ が表示され、インストールボタンが表示されます。 インストールが成功した後、WebPlayerは正常にロードされます。
[@
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <title>Unity Web Player | "Sample"</title>
	<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>
	<script type="text/javascript">
		<!--
		var unityObjectUrl = "http://webplayer.unity3d.com/download_webplayer_beta/3.0/uo/UnityObject2.js";
		if (document.location.protocol == 'https:')
			unityObjectUrl.replace("http://", "https://ssl-");
		document.write('<script type="text\/javascript" src="' + unityObjectUrl + '"><\/script>');
		-->
	</script>
        <script type="text/javascript">
		var u = new UnityObject2();
		u.observeProgress(function (progress) {
			var $missingScreen = jQuery(progress.targetEl).find(".missing");
			switch(progress.pluginStatus) {
				case "unsupported":
					showUnsupported();
				break;
				case "broken":
					alert("インストール後にブラウザを再起動する必要があります。");
				break;
				case "missing":
					$missingScreen.find("a").click(function (e) {
						e.stopPropagation();
						e.preventDefault();
						u.installPlugin();
						return false;
					});
					$missingScreen.show();
				break;
				case "installed":
					$missingScreen.remove();
				break;
				case "first":
				break;
			}
		});
		jQuery(function(){
			u.initPlugin(jQuery("#unityPlayer")[0], "Example.unity3d");
		});
        </script>
    </head>
	<body>
		<p class="header">
			<span>Unity Web Player | </span>WebPlayer
		</p>
		<div class="content">
			<div id="unityPlayer">
				<div class="missing">
					<a href="http://unity3d.com/webplayer/" title="Unity Web Player. Install now!">
						<img alt="Unity Web Playerを今すぐインストール！" src="http://webplayer.unity3d.com/installation/getunity.png" width="193" height="63" />
					</a>
				</div>
			</div>
		</div>
		<p class="footer">&laquo; created with <a href="http://unity3d.com/unity/" title="Go to unity3d.com">Unity</a> &raquo;</p>
	</body>
</html>
@]
