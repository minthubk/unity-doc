! Assset Server の日次ベースの使用方法 / Daily use of the Asset Server

このセクションではAsset Serverで日次ベースにおいて良くあるタスク、ワークフロー、およびベストプラクティスについて説明します。


!! 始めるには

もし Asset Server にすでに大量の作業が格納されているチームに加わる場合、次の手順により開始をして作業を正しく始めるのに最も早い方法です。

# 新規に空のプロジェクトを、パッケージは全てインポートせずに作成
# メニューから ^^Edit->Project Settings->Editor^^ を選択して、^^Asset Server^^ を version control mode として選択
# メニューから ^^Window->Version^^ を選択
# ^^Connection^^ ボタンをクリック
# ユーザ名とパスワードを入力（Asset Server 管理者により提供されたもの）
# ^^Show Projects^^ をクリックし、希望のプロジェクトを選択
# ^^Connect^^ をクリック
# ^^Update^^ タブをクリック
# ^^Update^^ ボタンをクリック
# コンフリクト発生時は、ローカルバージョンを全て破棄
# アップデートが完了する」のを待機
# 準備完了


!! ワークフローの基本

Asset Server を複数人数のチームで使用するとき、一般的には、作業を始める前にサーバから全てのアセットを更新するのが良い習慣で、日の終わりまたは作業終了時には変更をコミットします。さらに、何か顕著な進捗があった場合は日の途中であっても変更をコミットすべきです。変更を定期的かつ頻繁に行うことを推奨します。


!! サーバビューを理解する

$$Server View$$ はAsset Serverに接続しているウィンドウです。サーバビューを開くには ^^Window->Version Control^^ を選択します。

Attach:AssetServer-ServerView.png\\
''$$Overview$$ タブ''


サーバビューは次のタブに分かれています：$$Overview$$ 、 $$Update$$ および $$Commit$$ 。$$Overview$$ によりローカルプロジェクトおよびサーバにある最新版の差分を表示し、ローカルの変更をクイックにコミットして、最新のアップデートをダウンロード出来ます。 $$Update$$ によりリモートのサーバでの最新の変更を表示しローカルプロジェクトにダウンロードできます。$$Commit$$ により $$Changeset$$ を作成してサーバにコミットして、他の人がダウンロードできるようにします。


!!! サーバへの接続

Asset Serverを使用する前にそこに接続する必要があります。このためには ^^Connection^^ をクリックして、接続画面を表示します:

Attach:AssetServer-Connection.png\\
''Asset Server 接続画面''

次に入力する必要があるのは:
# サーバアドレス
# ユーザ名
# パスワード

^^Show projects^^ をクリックすることで Asset Server での利用可能なプロジェクトが表示され、どれに接続するか ^^Connect^^ をクリックして選択します。ユーザ名とパスワードはシステム管理者から入手することに留意して下さい。システム管理者が Asset Server をインストールした際にアカウントを作成しています。


!!! サーバからのアップデート

サーバから全てのアップデートをダウンロードするには、Overview タブから ^^Update^^ タブを選択しし、最新でコミットされた Changesets の一覧を表示します。これのうちひとつを選択することで、プロジェクトに何が変更されたか、コミットメッセージとともに参照することが出来ます。 ^^Update^^ をクリックすると、全ての Changeset アップデートのダウンロードが開始されます。

Attach:AssetServer-UpdateTab.png\\
''$$Update$$ タブ''

!!! サーバに変更をコミットする

ローカルプロジェクトに変更を行っ他後、サーバにその変更を格納する場合、 ^^Commit^^ タブを使用します。


Attach:AssetServer-UploadAssets.png\\
''$$Commit$$ タブ''

これでプロジェクトに対して、前回のアップデート以降に行われた全てのローカルの変更を参照できるようになり、どの変更をサーバにアップロードするかを選択することが出来ます。Changeset に変更を追加するには、Changeset フィールドに手動でドラッグするか、またはコミットメッセージ フィールドの下のボタンを使用するか、いずれかの方法で行います。コミットメッセージを入力することで、バージョン比較を行ったり、後ほど過去バージョンに切り戻す際に、役立つことを忘れないで下さい。両方とも以下で説明します。


!!! コンフリクトの解決

複数の人が同じデータの集合で作業をする以上、コンフリクトは必然的に発生します。パニックする必要はまったくないことを頭に入れるべきです。もしコンフリクトが発生している場合、 $$Conflict Resolution$$ （コンフリクト解決）ダイアログがプロジェクト アップデート時に表示されます。

Attach:AssetServer-ResolveConflict.png\\
'' $$Conflict Resolution$$ 画面''

ここで、各々のコンフリクトが通知され、各々のコンフリクトを解決するための異なるオプションが提示されます。どのコンフリクトの場合も、^^Skip Asset^^ （サーバからアセットをダウンロードしない）、^^Discard My Changes^^ （アセットのローカルバージョンを完全に上書きする）、または ^^Ignore Server Changes^^ （他の人がアセットに行った変更を無視し、更新を行えばサーバの変更を上書きする形でコミットできる）を個別のコンフリクトで選択できます。さらに、 ^^Merge^^ を選択して、スクリプトのような テキスト アセット でローカル バージョン とサーバ バージョンをマージできます。

__注意:__ もし変更を破棄することを選択した場合、アセットはサーバの最新版に更新されます（すなわち、自分が作業をしていた際に他の人が行った変更を反映します）。もしアセットを自身の作業前の状態を取得したい場合、チェックアウトしたバージョンに切り戻すべきです。（以下の ''リビジョン履歴の参照とアセットを切り戻す方法'' を参照して下さい。）

もしローカルへの変更をコミットする際にコンフリクトが発生した場合、Unity はコミット変更を拒否してコンフリクトが発生していることを知らせます。コンフリクトを解決するには、 ^^Update^^ を選択します。ローカルへの変更は自動的には上書きされません。この時点で $$Conflict Resolution$$ ダイアログが表示され、前述の段落の説明に従います。


!!! リビジョン履歴の参照とアセットを切り戻す方法

Asset Server はアセットのアップロードされた全てのバージョンをデータベースに保存しているため、いつでもローカルのバージョンを過去のバージョンに切り戻すことが出来ます。プロジェクト全体をリストアするか、単独のファイルをリストアするかいずれかを選択できます。アセットまたはプロジェクトの過去バージョンに切り戻すには、Overview タブを選択して Asset Server Actions の下に表示されている $$Show History$$ をクリックします。これで全てのコミットの一覧が表示され、いずれかのファイルまたはプロジェクト全体を過去のバージョンにリストアすることが出来ます。

Attach:AssetServer-RevertingAsset.png\\
'' $$History$$ ダイアログ''

ここでは、バージョン番号および追加されたコメントを各アセットまたはプロジェクトのバージョンとともに参照できます。適切なコメント文が役立つ理由のひとつがこれです。いずれかのアセット選択してその履歴を参照するか ^^Entire Project^^ を選択してプロジェクトに対して行われた全ての変更を参照します。必要なリビジョンを探します。リビジョン全体を選択するか、リビジョンの中の特定のアセットを選択出来ます。次に ^^Download Selected File^^ をクリックして、選択したリビジョンのファイルでローカルアセットを置き換えます。 ^^Revert All Project^^ によりプロジェクト全体を選択したリビジョンに切り戻します。

切り戻す前に、もしローカル バージョンおよび選択したサーバー バージョンに違いがある場合、それらの変更はローカル バージョンが切り戻しされたときに失われます。

もしローカルのファイルに行われた変更を破棄したいだけの場合、切り戻す必要はありません。Main Asset Serverウィンドウで ^^Discard Changes^^ を選択することでローカルへの変更を破棄出来ます。これによりサーバにあるプロジェクトの最新バージョンをローカル プロジェクトに即時にダウンロードします。


!!! アセット バージョンの比較

二つの特定のバージョンの違いが気になる場合、それらを明示的に比較することが出来ます。これをするためには ^^History^^ を開き、比較を行いたいリビジョンおよびアセットを選択して、 ^^Compare to Local Version^^ をクリックします。もし二つの異なるアセットのリビジョンを比較する必要がある場合、右クリックしてコンテキストメニューで ^^Compare to Another Revision^^ を選択し、次に比較したいリビジョンを探して選択します。

''注意'': この機能を実行するためにはサポートされている diff/merge ツールがインストールされている必要があります。サポートされているツールは:
* Windows:
** TortoiseMerge:  [[http://tortoisesvn.net/|TortoiseSVN]] のひとつまたは、 [[http://sourceforge.net/project/showfiles.php?group_id=138498 | プロジェクトのサイト]] から別にダウンロード
** [[http://winmerge.org/ | WinMerge]] 
** [[http://www.sourcegear.com/diffmerge/ | SourceGear Diff/Merge]] 
** [[http://www.perforce.com/perforce/products/merge.html | Perforce Merge (p4merge)]]: Perforce のビジュアル クライアント スイート（P4V）のひとつ。
** [[http://sourceforge.net/projects/tkdiff/ | TkDiff]] 
* Mac OS X:
** [[http://www.sourcegear.com/diffmerge/ | SourceGear Diff/Merge]] 
** FileMerge: Appleの [[http://developer.apple.com | XCode 開発ツール]] のひとつ.
** [[http://sourceforge.net/projects/tkdiff/ | TkDiff]] 
** [[http://www.perforce.com/perforce/products/merge.html | Perforce Merge (p4merge)]]: Perforce のビジュアル クライアント スイート（P4V）のひとつ。


!!! 削除したアセットの回復

ローカル アセットを削除してサーバに削除をコミットしてもアセットは永続的に削除されません。アセットの過去バージョンのいずれであっても Overview タブの ^^History^^ ウィンドウを通してリストア出来ます。

Attach:AssetServer-RecoverDeleted.png\\
'' $$History$$ ダイアログ''

^^Deleted Assets^^ アイテムを展開して、アセットを一覧から選択し、 ^^Recover^^ を押すと、選択されたセットはダウンロードされ、ローカルプロジェクトに再び追加されます。もし削除が行われたアセットが配置されたフォルダがまだ存在する場合、アセットは元の場所に配置され、そうでない場合はローカルプロジェクトのルートの Assets フォルダに追加されます。


!!! ベストプラクティスおよび良くある問題

Asset Server を使用するにあたって役立つ、ベストプラクティスおよび良くある問題を集めてみました:

# とにかくバックアップ
** データベースのバックアップを保持して下さい。これを行うことは非常に重要です。残念なケースでハードウェアの問題、ウィルス、ユーザエラー、等々といった場合に作業を全て失う可能性があります。このためバックアップシステムを用意して下さい。バックアップシステムをセットするためのウェブ上の情報はたくさんあります。

# %item value=2% マシンのシャットダウン前にサーバを停止する
** これにより PostgreSQL (Asset Server) のログで "早いシャットダウン" が生成されることを回避できます。もしこれが発生した場合 Asset Server は不適切なシャットダウンに伴うリカバリを行う必要があります。これは大規模プロジェクトでコミットがたくさんある場合、長い時間かかる可能性があります。

# %item value=3% コンソールからパスワードをリセットする
** シェル、コンソール、またはコマンドラインから次のコマンドにより直接パスワードをリセット出来ます:\\
\\
[@ psql -U unitysrv -d template1 -c"alter role admin with password 'MYPASSWORD'" @]

# %item value=4% Asset Server に接続できない
**パスワードの有効期限が切れたかもしれません。パスワードをリセットしてみて下さい。
**さらにユーザ名は大文字小文字を区別します: "Admin" != "admin" 。大文字または小文字が正しいことを確認して下さい。
**サーバが実行中であることを確認して下さい:
***OS X または Linux ではターミナル上で次のように入力出来ます: ps -aux
***Windows ではタスクマネージャを使用出来ます。
**Asset Server がネットワーク上でひとつ以上のコンピュータないかを確認します。間違った方に接続している可能性があります。

# %item value=5% Asset Server が 64ビット Linux で動作しない
**Asset Server は必要パッケージの 32 ビット版をインストールすれば 64 ビット Linux が正しく動作します。これを行うには "dpkg -i --force-architecture" を使用します。

# %item value=6% Asset Server ログを使用してより多くの情報を取得します
**Windows:
***%ProgramFiles%\Unity\AssetServer\log
**OS X:
***/Library/UnityAssetServer/log

# %item value=7%"The application failed to initialize properly (0xc0000135)" in Windows XP
**In this case Service Pack 2 is required, and you should install .NET 2.0.


!! Asset Server のトレーニングはこれで完了

Asset Server を効果的に使用するために十分な知識が身についたはずです。自身の作業に取り掛かって、良いワークフローの基本を忘れないで下さい。変更は頻繁にコミットして、何か失うことを怖れる必要はありません。
