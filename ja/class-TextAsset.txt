! テキスト アセット / Text Asset

$$Text Asset$$ は、インポートされたテキスト ファイルのための形式です。  プロジェクト フォルダにテキストをドロップすると、テキスト アセットに変換されます。  以下のファイル形式がサポートされています。

*__.txt__
*__.html__
*__.htm__
*__.xml__
*__.bytes__
>>u43<<
*__.json__
*__.csv__
*__.yaml__
*__.fnt__
>><<

Attach:TextAssetInspector.png\\
''インスペクタ上のテキスト アセット''


!! プロパティ

||PROPS
||``Text`` ||1 つの文字列としての、アセットの完全なテキスト。 ||


!! 詳細

テキスト アセットは、非常に特殊な使用事例です。  ゲームの作成中に、別のテキストからのテキストをゲーム内に挿入するのに非常に便利です。  簡単な .txt ファイルを記述し、テキストをゲーム内に簡単に挿入できます。  ランタイムでのテキスト ファイル生成のためのものです。  これを行うには、従来の入出力プログラミング技術を使用して、外部ファイルを読み書きする必要があります。

以下の 2 つのシナリオを考えてください。  あなたは、従来のテキストの多いアドベンチャー ゲームを作成しています。  制作を簡単にするため、ゲームのテキストをすべて別々の部屋に分割したいと思っています。  この場合、1 つの部屋で使用されるすべてのテキストを含む 1 つのテキスト ファイルを作成します。  そこから、入る部屋に対して正しいテキスト アセットを参照するのは簡単です。  次に、カスタマイズされた構文解析ロジックで、大量のテキストを非常に簡単に管理できます。


!!! バイナリ データ
テキスト アセットの特殊機能は、テキスト アセットはバイナリ データを格納できるということです。 ファイルに拡張子__.bytes__を与えると、テキスト アセットとしてロードされ、$$bytes$$ プロパティを通じてアクセスできます。

例えば、jpeg ファイルを Resources フォルダに入れ、拡張子を __.bytes__ に変え、次のスクリプト コードを使用して、ランタイムでデータを読み込みます。
[@
//ディスクからのテクスチャのロード
TextAsset bindata= Resources.Load("Texture") as TextAsset;
Texture2D tex = new Texture2D(1,1);
tex.LoadImage(bindata.bytes); 
@]

!! ヒント
* テキスト アセットは、ビルド内のその他すべてのアセットのように直列化できます。  ゲームのパブリッシュ時に含まれる物理テキスト ファイルはありません。
* テキスト アセットは、ランタイムでのテキスト ファイル生成に使用するためのものではありません。

