! プロファイラー (Unity Pro のみ) / Profiler (Pro only)

Unityプロファイラーはゲームの最適化に役立ちます。ゲームの様々な要素で要した時間を報告してくれます。例えばゲームロジックのレンダリング、アニメーションに要した時間の割合が分かります。

プロファイリングを有効にしてエディタで実行することが出来て、パフォーマンスを記録することが出来ます。次にProfiler ウィンドウがデータをタイムラインで表示するため、スパイクした (他より時間を要した) フレームや要素が分かります。タイムライン上の任意の位置をクリックすることでProfilerウィンドウの下部に選択したフレームの詳細情報が表示されます。

プロファイリングがコードを "測定する" ことに留意して下さい。測定はゲームのパフォーマンスにわずかな影響があります。一般的にはこのオーバーヘッドはゲームのフレームレートに影響するほどの大きさするときではありません。プロファイリングを使用するとき、特定のエリアで要した時間の割合 (またはパーセンテージ) のみを考慮することが一般的です。さらにパフォーマンスを改善するためには時間を最も要する部分のみにフォーカスして下さい。コード変更の前後のプロファイリングの結果を比較して改善結果を測定します。場合によっては行った変更がフレームレートにマイナス影響を与える場合があり、コード最適化による想定外の結果があることを加味すべきです。

(:tocportion:)

!! さらに詳細について

* [[OptimizingGraphicsPerformance | グラフィックス パフォーマンス最適化]] ページ。


!! Webplayer
For webplayer profiling, follow these steps:
# Check the ''Development Build'' and ''Autoconnect Profiler'' checkboxes in Unity's Build Settings dialog before starting the build.
# When the game is running in the webplayer, make sure that ''Release Channel'' (open the context menu with alt+right-click) is set to ''Development''.
# Select ''OSXWebPlayer(YOURCOMPUTERNAME)'' or ''WindowsWebPlayer(YOURCOMPUTERNAME)'' as appropriate from the Profiler Window's ''Active Profiler'' drop-down menu.

>>ios<<
!! iOS
リモートプロファイリング は 次の手順により iOS デバイスで有効化できます:
# iOS デバイスを WiFi ネットワークに接続します（デバイスから Unity エディタにプロファイリングデータを送信するためにプロファイラはローカル／アドホック WiFi ネットワークを使用します）
# UnityのBuild Settings ダイアログで "Autoconnect Profiler" をチェックします。
# ケーブル経由で Mac にデバイスを接続し、Unity エディタで "Build & Run" をクリックします。
# デバイスでアプリが起動した後、Unity エディタで Profiler ウィンドウを開きます。(Window->Profiler)

ファイアウォールを使用している場合、 送信のルールでポート番号  54998 to 55511が 開放されていることを確認します - これらのポートは Unity によりリモートプロファイリングで使用されます。

__注意:__ Unity エディタはデバイスに自動接続しない場合があります。そのような場合は、プロファイラの接続は Profiler ウィンドウの ``Active Profiler`` ドロップダウンメニューで適切なデバイスを選択して開始できます。
>><<

>>android<<
!! Android
リモートプロファイリング は 異なるパスにより Android デバイスで有効化できます: WiFi または [[ http://developer.android.com/guide/developing/tools/adb.html | ADB ]] 。

WiFi プロファイリングでは、次のステップに従います:
# Androidデバイスで モバイルデータ通信 を無効化します。
# Android デバイスを WiFi ネットワークに接続します。
# UnityのBuild Settings ダイアログで "Autoconnect Profiler" をチェックします。 
# ケーブル経由で Mac/PC にデバイスを接続し、Unity エディタで "Build & Run" をクリックします。
# デバイスでアプリが起動した後、Unity エディタで Profiler ウィンドウを開きます。(Window->Profiler)
# もしUnity エディタがデバイスに自動接続しない場合、Profiler ウィンドウの ``Active Profiler`` ドロップダウンメニューで適切なデバイスを選択します。
__注意:__ Android デバイス および （Unity エディタを実行している）ホストコンピュータ は両方とも同じ [[ http://en.wikipedia.org/wiki/Subnetwork | サブネット ]] にないとデバイス検知が正しく動作しません。

ADB プロファイリングを行うには、次の手順に従います:
* ケーブル経由で Mac/PC にデバイスを接続し、ADB がデバイスを認識することを確認します（すなわち ''adb devices'' のリストに表示されます）。
* Unity の Build Settings ダイアログで "Development Build" をチェックし、"Build & Run" をクリックします。
* デバイスでアプリが起動した後、Unity エディタで Profiler ウィンドウを開きます。(Window->Profiler)
* Profiler ウィンドウの ``Active Profiler`` ドロップダウンメニューで ''AndroidProfiler(ADB@127.0.0.1:54999)'' を選択します。

__注意:__ Unity エディタは "Build & Run" を押したときアプリケーションに対して自動的に adb トンネルを作成します。そのためには、ターミナル/コマンドウィンドウを開き、次を入力します
->@@adb forward tcp:54999 localabstract:Unity-<バンドル識別子をここに記述>@@

__注意:__ ドロップダウンメニューのエントリは選択されたターゲットが Android の場合のみ表示されます。

ファイアウォールを使用している場合、 送信のルールでポート番号  54998 to 55511が 開放されていることを確認します - これらのポートは Unity によりリモートプロファイリングで使用されます。

>><<
